/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Main HBase build file shared by all of its build targets.
 * The file needs to be parameterized by the HBase version and the source directories.
 *
 * See build.gradle files for an example of how to use this script.
 */

import groovy.json.JsonOutput

apply plugin: 'org.apache.beam.module'
applyJavaNature(
    archivesBaseName: project.hasProperty('archives_base_name') ? archives_base_name : archivesBaseName
)

description = "Apache Beam :: SDKs :: Java :: IO :: HBase $hbase_version"

/*
 * We need to rely on manually specifying these evaluationDependsOn to ensure that
 * the following projects are evaluated before we evaluate this project. This is because
 * we are attempting to reference the "sourceSets.test.output" directly.
 */
evaluationDependsOn(":sdks:java:core")
evaluationDependsOn(":runners:core-java")

/*
 * We have to explicitly set all directories here to make sure each
 * version of HBase has the correct overrides set.
 */
sourceSets {
  main {
    java {
      srcDirs = main_source_dirs
    }
    resources {
      srcDirs = main_resources_dirs
    }
  }
  test {
    java {
      srcDirs = test_source_dirs
    }
    resources {
      srcDirs = test_resources_dirs
    }
  }
}

test {
  systemProperty "log4j.configuration", "log4j-test.properties"
  //systemProperty "org.slf4j.simpleLogger.defaultLogLevel", "debug"
  jvmArgs "-XX:-UseGCOverheadLimit"
  if (System.getProperty("beamSurefireArgline")) {
    jvmArgs System.getProperty("beamSurefireArgline")
  }
  jvmArgs "-Dtest.build.data.basedirectory=build/test-data"
}

dependencies {
  compile library.java.vendored_guava_20_0
  compile project(path: ":sdks:java:core", configuration: "shadow")
  compile project(":sdks:java:io:hadoop-common")
  compile library.java.slf4j_api
  compile "org.apache.hbase:hbase-shaded-client:$hbase_version"
  testCompile project(path: ":sdks:java:io:common", configuration: "testRuntime")
  testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
  testCompile library.java.commons_lang3
  testCompile library.java.junit
  testCompile library.java.hamcrest_core
  testCompile library.java.hamcrest_library
  testCompile library.java.hadoop_minicluster
  testCompile library.java.hadoop_hdfs
  testCompile library.java.hadoop_common
  testCompile("org.apache.hbase:hbase-server:$hbase_version:tests") {
    // We prevent bringing in unshaded dependencies to not conflict
    // with hbase-shaded-server and hbase-shaded-client
    transitive = false
  }
  testCompile("org.apache.hbase:hbase-common:$hbase_version:tests") {
    // We prevent bringing in unshaded dependencies to not conflict
    // with hbase-shaded-server and hbase-shaded-client
    transitive = false
  }
  testCompile "org.apache.hbase:hbase-hadoop-compat:$hbase_version:tests"
  testCompile "org.apache.hbase:hbase-hadoop2-compat:$hbase_version:tests"
  testRuntimeOnly project(":runners:direct-java")
}
